CREATE TABLE IF NOT EXISTS MPA_RATINGS
(
    RATING_ID INT                   NOT NULL,
    RATING    CHARACTER VARYING(10) NOT NULL,
    CONSTRAINT MPA_RATINGS_PK
        PRIMARY KEY (RATING_ID)
);

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   INT         NOT NULL AUTO_INCREMENT,
    USER_NAME VARCHAR(20),
    EMAIL     VARCHAR(64) NOT NULL UNIQUE,
    LOGIN     VARCHAR(20) NOT NULL UNIQUE,
    BIRTHDAY  DATE,
    CONSTRAINT USER_PK
        PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID          INT                   NOT NULL AUTO_INCREMENT,
    FILM_NAME        CHARACTER VARYING(40) NOT NULL,
    FILM_DESCRIPTION CHARACTER VARYING(200),
    RELEASE_DATE     DATE,
    DURATION         INT,
    FILM_RATE        INT,
    MPA_ID           INT,
    PRIMARY KEY (FILM_ID),
    CONSTRAINT FILMS_MPA_FK
        FOREIGN KEY (MPA_ID) REFERENCES MPA_RATINGS (RATING_ID)
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INT                   NOT NULL,
    GENRE    CHARACTER VARYING(20) NOT NULL,
    CONSTRAINT GENRE_PK
        PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES
(
    FILM_ID  INT NOT NULL,
    GENRE_ID INT NOT NULL,
    CONSTRAINT FILMS_GENRES_PK
        PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT FILM_ID_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT GENRE_ID_FK
        FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID)

);

CREATE TABLE IF NOT EXISTS FILMS_LIKES
(
    FILM_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    CONSTRAINT FILMS_USERS_PK
        PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT FILMS_ID_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID       INT     NOT NULL,
    FRIEND_ID     INT     NOT NULL,
    FRIEND_STATUS BOOLEAN NOT NULL,
    CONSTRAINT FRIENDS_PK
        PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FRIENDS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FRIEND_ID
        FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS DIRECTORS
(
    DIRECTOR_ID   INTEGER AUTO_INCREMENT,
    DIRECTOR_NAME CHARACTER VARYING(50),
    CONSTRAINT ID_KEY
        PRIMARY KEY (DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTORS
(
    FILM_ID     INTEGER NOT NULL,
    DIRECTOR_ID INTEGER NOT NULL,
    CONSTRAINT DIRECTORS_FK
        FOREIGN KEY (DIRECTOR_ID) REFERENCES DIRECTORS (DIRECTOR_ID)
            ON DELETE CASCADE,
    CONSTRAINT FILM_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID)
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    REVIEW_ID   INTEGER AUTO_INCREMENT,
    CONTENT     VARCHAR(1000) NOT NULL,
    IS_POSITIVE BOOLEAN       NOT NULL,
    USER_ID     INT           NOT NULL,
    FILM_ID     INT           NOT NULL,
    USEFUL      INT           NOT NULL,
    CONSTRAINT REVIEWS_PK PRIMARY KEY (REVIEW_ID),
    CONSTRAINT REVIEWS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT REVIEWS_FILMS_ID_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEWS_USERS
(
    REVIEW_ID INT     NOT NULL,
    USER_ID   INT     NOT NULL,
    IS_LIKE   BOOLEAN NOT NULL,
    CONSTRAINT REVIEWS_USERS_PK
        PRIMARY KEY (REVIEW_ID, USER_ID),
    CONSTRAINT REVIEWS_USERS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT REVIEWS_USERS_REVIEW_ID_FK
        FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS (REVIEW_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FEEDS
(
    TIMESTAMP  LONG                  NOT NULL,
    USER_ID    INTEGER               NOT NULL,
    EVENT_TYPE CHARACTER VARYING(50) NOT NULL,
    OPERATION  CHARACTER VARYING(50) NOT NULL,
    EVENT_ID   INTEGER AUTO_INCREMENT,
    ENTITY_ID  INTEGER               NOT NULL,
    CONSTRAINT FEEDS_EVENT_ID_PK
        PRIMARY KEY (EVENT_ID),
    CONSTRAINT FEEDS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILMS_MARKS
(
    FILM_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    MARK DOUBLE NOT NULL,
    CONSTRAINT FILMS_MARKS_PK
        PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT FILMS_MARKS_FILMS_ID_FK
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT FILMS_MARKS_USER_ID_FK
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);